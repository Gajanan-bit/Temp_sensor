C51 COMPILER V7.08   LCD1                                                                  06/14/2019 17:59:20 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE LCD1
OBJECT MODULE PLACED IN C:\!!!!!!\lcd1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd1.c BROWSE DEBUG OBJECTEXTEND OBJECT(C:\!!!!!!\lcd1.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          #include"lcd.h"
   4          #include<string.h>
   5          #define lcd P0
   6          sbit rs=P2^0;
   7          sbit rw=P2^1;
   8          sbit en=P2^2;
   9          //code char cgram_lut[]={0x1f,0x11,0x11,0x11,0x11,0x11,0x1f,0x00};
  10          
  11          void LCD_init(void)
  12          {
  13   1      delay_ms(20);
  14   1      LCD_cmd(0x30);
  15   1      delay_ms(8);
  16   1      LCD_cmd(0x30);
  17   1      delay_ms(2);
  18   1      LCD_cmd(0x30);
  19   1      delay_ms(2);
  20   1      LCD_cmd(0x38);
  21   1      LCD_cmd(0x10);
  22   1      LCD_cmd(0x01);
  23   1      LCD_cmd(0x06);
  24   1      LCD_cmd(0x0e);
  25   1      }
  26          void LCD_cmd(char cmd)
  27          {
  28   1      rs=0;
  29   1      LCD_disp_write(cmd);
  30   1      }
  31          
  32          void LCD_char(char ch)
  33          {
  34   1      rs=1;
  35   1      LCD_disp_write(ch);
  36   1      }
  37          
  38          void LCD_disp_write(char ch)
  39          {
  40   1      rw=0;
  41   1      lcd=ch;
  42   1      en=1;
  43   1      delay_ms(2);
  44   1      en=0;
  45   1      }
  46          void LCD_str(char *p)
  47          {
  48   1      int i=0;
  49   1      for(i=0;p[i];i++)
  50   1      {
  51   2      LCD_char(p[i]);
  52   2      }
  53   1      }
  54          void LCD_int(u16 n)
  55          {
C51 COMPILER V7.08   LCD1                                                                  06/14/2019 17:59:20 PAGE 2   

  56   1      u16 rev=0;
  57   1      while(n)
  58   1      {
  59   2      rev=rev*10+n%10;
  60   2      n=n/10;
  61   2      }
  62   1      while(rev)
  63   1      {
  64   2      LCD_char(rev%10+48);
  65   2      rev=rev/10;
  66   2      }
  67   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
